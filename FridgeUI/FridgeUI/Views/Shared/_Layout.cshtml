@using System.IdentityModel.Tokens.Jwt
@using System.Security.Claims
@{
    var token = this.Context.Request.Cookies["JWT"];
    string userName = null;
    IEnumerable<string> roles = null;

    if (token != null)
    {
        var handler = new JwtSecurityTokenHandler();
        var jwtSecurityToken = handler.ReadJwtToken(token);

        userName = jwtSecurityToken.Claims.Where(i => i.Type == ClaimTypes.Name).Select(j => j.Value).First();
        roles = jwtSecurityToken.Claims.Where(i => i.Type == ClaimTypes.Role).Select(j => j.Value).ToList();

        this.Context.Response.Cookies.Append("JWT", token);
    }
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - FridgeUI</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" />
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container">
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">FridgeUI</a>
                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    @if (roles != null)
                    {
                        <ul class="nav navbar-nav">
                            @if (roles.Where(i => i == UserRoles.User).FirstOrDefault() != null)
                            {
                                <li class="nav-item">@Html.ActionLink("Fridges", "GetFridges", "Fridge", null, new { @class = "nav-link" })</li>
                            }
                            @if (roles.Where(i => i == UserRoles.Administrator).FirstOrDefault() != null)
                            {
                            }
                        </ul>
                    }
                </div>
                <div>
                    <ul class="nav navbar-nav flex-grow-1">
                        @if (string.IsNullOrEmpty(this.Context.Request.Headers.Authorization))
                        {
                            <li class="nav-item">@Html.ActionLink("Create account", "Create", "Account", null, new { @class = "nav-link" })</li>
                            <li class="nav-item">@Html.ActionLink("Log in", "Login", "Account", null, new { @class = "nav-link" })</li>
                        }
                        else
                        {
                            <li class="nav-item">@Html.ActionLink(@userName, "Index", "Account", null, new { @class = "nav-link" })</li>
                        }
                    </ul>
                </div>
            </div>
        </nav>
    </header>
    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2022 - FridgeUI - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
        </div>
    </footer>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
